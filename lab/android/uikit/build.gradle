apply plugin: 'com.android.library'
apply plugin: 'maven'
android {
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.ext.COMPILE_SDK_VERSION
    buildToolsVersion rootProject.ext.BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.TARGET_SDK_VERSION
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res', 'res-ptr2']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
    publishNonDefault true
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:${rootProject.ext.SUPPORT_VERSION}"
    compile 'com.android.support:design:23.3.0'
    //compile fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile ('com.github.backustech.boxing:boxing-impl:v14.0'){
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
    }
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.facebook.fresco:fresco:0.12.0'
    compile 'me.relex:photodraweeview:1.1.2'

    debugCompile project(path: ':nimlib', configuration: 'debug')
    releaseCompile 'com.lightappbuilder.lab4:nimlib:+'

}

if (android.publishNonDefault) {
    android.libraryVariants.all { variant ->
        if (variant.name == android.defaultPublishConfig) {
            def bundleTask = tasks["bundle${name.capitalize()}"]
            artifacts {
                archives(bundleTask.archivePath) {
                    classifier null
                    builtBy bundleTask
                }
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(rootProject.ext.repoOut))

            pom.project {
                name 'uikit'
                description "uikit"

                groupId 'com.lightappbuilder.lab4'
                artifactId 'uikit'
                version '1.0.0'
            }
        }
    }
}
